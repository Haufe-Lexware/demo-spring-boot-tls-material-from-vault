package com.haufe.spring.cloud.vault.config.tls;

import org.immutables.value.Value.Immutable;

import java.security.KeyStore;
import java.util.Optional;

/**
 * A data object that holds optional private key material and trust material required for the configuration
 * of an {@link javax.net.ssl.SSLContext}. Objects of this type are typically created by the
 * {@code ImmutableTLSClientKeyMaterial.Builder} generated by the Immutables library.
 *
 * @see <a href="https://immutables.github.io/">Immutables library</a>
 */
@Immutable
public interface TLSClientKeyMaterial {

    /**
     * A data object that holds the private key material and certificate required to configure use of a client
     * certificate in an {@link javax.net.ssl.SSLContext}. Objects of this type are typically created by the
     * {@code ImmutablePrivateKeyMaterial.Builder} generated by the Immutables library.
     *
     * @see <a href="https://immutables.github.io/">Immutables library</a>
     */
    @Immutable
    interface PrivateKeyMaterial {

        /**
         * The key store that holds the client certificate together with the corresponding private key.
         *
         * @return Value for property 'keyStore', never {@literal null}
         */
        KeyStore getKeyStore();

        /**
         * The password required to access the {@link #getKeyStore() keyStore}.
         *
         * @return Value for property 'keyStorePassword';
         * never {@literal null}, its {@code length} may be {@literal 0}, though.
         */
        char[] getKeyStorePassword();

        /**
         * The password required to access the key entry inside the {@link #getKeyStore() keyStore}.
         *
         * @return Value for property 'keyPassword';
         * never {@literal null}, its {@code length} may be {@literal 0}, though.
         */
        char[] getKeyPassword();

    }

    /**
     * A data object that holds the trusted certificates required to configure an {@link javax.net.ssl.SSLContext}.
     * Objects of this type are typically created by the
     * {@code ImmutableTrustMaterial.Builder} generated by the Immutables library.
     *
     * @see <a href="https://immutables.github.io/">Immutables library</a>
     */
    @Immutable
    interface TrustMaterial {

        /**
         * The key store that holds the trusted server or CA certificate.
         *
         * @return Value for property 'keyStore', never {@literal null}
         */
        KeyStore getTrustStore();

        /**
         * The password required to access the {@link #getTrustStore()}  trustStore}.
         *
         * @return Value for property 'trustStorePassword';
         * never {@literal null}, its {@code length} may be {@literal 0}, though.
         */
        char[] getTrustStorePassword();
    }

    /**
     * The client private key material to be used in TLS connections, if any.
     *
     * @return optional private key material, never {@literal null}
     */
    Optional<PrivateKeyMaterial> getPrivateKeyMaterial();

    /**
     * The trust material that is used to verify a TLS server certificate.
     *
     * @return optional trust material, never {@literal null}
     */
    Optional<TrustMaterial> getTrustMaterial();

}
